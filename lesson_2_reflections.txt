What happens when you initialize a repository? Why do you need to do it?
-repository stores metadata the user doesn't need to interact with


How is the staging area different from the working directory and the repository? What value do you think it offers?

-The staging area is where files are placed to be committed. It -allows one to group the files one wishes to commit together.

How can you use the staging area to make sure you have one commit per logical change?
-Keep the files you wish to change in the staging area as you change them
-when done, take them out of the staging area

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
-branches would let you try out experimental changes/drastic changes
-can go back to original version while keeping branch intact

How do the diagrams help you visualize the branch structure?

-Lets me visualize which commits are connected to each other and how

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

-creates a commit that contains elements from both branches
-represented as it is because it's composed of the latest
-commits from the two branches

What are the pros and cons of GitÅfs automatic merging vs. always doing merges manually?

Automatic:
pros
-done without user input
-easier
cons
-leaves errors and conflicts

Manual
pros
-can fix errors and conflict
-user has control over process
cons
-not as easy
-user needs to do it themselves